<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netcoreapp3.0;net472;uap10.0</TargetFrameworks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <CodeAnalysisRuleSet>FxCopRules.ruleset</CodeAnalysisRuleSet>

    <Summary>Async synchronization primitives, async collections, TPL and dataflow extensions.</Summary>
    <Description>Async synchronization primitives, async collections, TPL and dataflow extensions. The JoinableTaskFactory allows synchronously blocking the UI thread for async work. This package is applicable to any .NET application (not just Visual Studio).</Description>
    <PackageTags>Threading Async Lock Synchronization Threadsafe</PackageTags>

    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == 'uap10.0'">
    <NugetTargetMoniker>UAP,Version=v10.0</NugetTargetMoniker>
    <AssetTargetFallback>;net461;net462;net47;net471;net472;net48</AssetTargetFallback>
    <DefineConstants Condition="'$(DisableImplicitFrameworkDefines)' != 'true'">$(DefineConstants);NETFX_CORE;WINDOWS_UWP;WINRT</DefineConstants>
    <TargetFrameworkIdentifier>.NETStandard</TargetFrameworkIdentifier>
    <TargetFrameworkVersion>v2.0</TargetFrameworkVersion>
    
    <!-- Need to override the built-in implicit defines for UAP or it'll be NETCORE5_0 -->
    <!-- this makes it UAP10_0_10240_0 to match the rest -->
    <ImplicitFrameworkDefine Condition="'$(DisableImplicitFrameworkDefines)' != 'true'">UAP$(TargetPlatformMinVersion.Replace('.', '_'))</ImplicitFrameworkDefine>
    <DisableImplicitFrameworkDefines Condition="'$(DisableImplicitFrameworkDefines)' != 'true'">true</DisableImplicitFrameworkDefines>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedResource Update="Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Strings.??*.resx">
      <DependentUpon>Strings.resx</DependentUpon>
      <Generator />
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <CodeAnalysisDictionary Include="CustomDictionary.xml" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net472'  ">
    <Reference Include="WindowsBase" />
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="$(TargetFramework)\PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="$(TargetFramework)\PublicAPI.Unshipped.txt" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Roslyn.Diagnostics.Analyzers" Version="2.9.7" PrivateAssets="all" />
    <PackageReference Include="System.Threading.Tasks.Extensions" Version="4.5.3" />
    <PackageReference Include="Microsoft.VisualStudio.Validation" Version="15.5.31" />
    <PackageReference Include="Microsoft.Win32.Registry" Version="4.6.0" />
    <PackageReference Include="MicroBuild.VisualStudio" Version="$(MicroBuildVersion)" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.9.6" PrivateAssets="all" />
    <PackageReference Include="XliffTasks" Version="1.0.0-beta.19253.2" PrivateAssets="all" />
  </ItemGroup>
  <ItemGroup>
    <!-- Don't consume the analyzers in this library itself,
         but have a package dependency so users of this library will automatically get the analyzers.
         This requires an MSBuild workaround as documented here: https://github.com/Microsoft/msbuild/issues/2661#issuecomment-338808137
         -->
    <ProjectReference Include="..\Microsoft.VisualStudio.Threading.Analyzers.CodeFixes\Microsoft.VisualStudio.Threading.Analyzers.CodeFixes.csproj">
      <PrivateAssets>none</PrivateAssets>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>
      <UndefineProperties>TargetFramework</UndefineProperties>
    </ProjectReference>
  </ItemGroup>
  <Import Project="OptProf.targets" Condition=" '$(TargetFramework)' == 'net472' " />
</Project>
